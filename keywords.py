supported_operators = "+-/,()<>:=.;*[]"

defined_keywords_list = {
      "absolute": "TK_absolute",
      "and": "TK_and",
      "array": "TK_array",
      "asm": "TK_asm",
      "begin": "TK_begin",
      "bool": "TK_bool",
      "case": "TK_case",
      "char": "TK_char",
      "const": "TK_const",
      "constructor": "TK_constructor",
      "destructor": "TK_destructor",
      "div": "TK_div",
      "do": "TK_do",
      "downto": "TK_downto",
      "else": "TK_else",
      "end": "TK_end",
      "eof":"TK_eof",
      "file": "TK_file",
      "for": "TK_for",
      "function": "TK_function",
      "goto": "TK_goto",
      "if": "TK_if",
      "implementation": "TK_implementation",
      "in": "TK_in",
      "inherited": "TK_inherited",
      "inline": "TK_inline",
      "integer": "TK_integer",
      "interface": "TK_interface",
      "id": "TK_id",
      "label": "TK_label",
      "mod": "TK_mod",
      "nil": "TK_nil",
      "not": "TK_not",
      "object": "TK_object",
      "of": "TK_of",
      "operator": "TK_operator",
      "or": "TK_or",
      "packed": "TK_packed",
      "procedure": "TK_procedure",
      "program": "TK_program",
      "real": "TK_real",
      "record": "TK_record",
      "reintroduce": "TK_reintroduce",
      "repeat": "TK_repeat",
      "range": "TK_range",
      "reserved":"TK_reserved",
      "self": "TK_self",
      "set": "TK_set",
      "shl": "TK_shl",
      "shr": "TK_shr",
      "string": "TK_string",
      "strlit":"TK_strlit",
      "then": "TK_then",
      "to": "TK_to",
      "type": "TK_type",
      "unit": "TK_unit",
      "until": "TK_until",
      "uses": "TK_uses",
      "var": "TK_var",
      "while": "TK_while",
      "with": "TK_with",
      "writeln": "TK_writeln",
      "xor": "TK_xor"
}

operators_KeyValue_list = {
            "+": "ADD",
            "-": "SUBTRACT",
            ",": "COMMA",
            "(": "LEFT_PAR",
            ")": "RIGHT_PAR",
            "<": "LESS_THAN",
            ">": "GREATER_THAN",
            ":=": "ASSIGNMENT",
            ".": "DOT",
            ";": "SEMICOLON",
            ":": "COLON",
            "=": "EQUAL",
            "*": "MULTIPLY",
            "/": "DIVIDE",
            "<>": "NOT_EQUAL",
            "<=:": "LESS_THAN_EQUAL",
            ">=:": "GREATER_THAN_EQUAL",
            "[": "LEFT_BRACKET",
            "]": "RIGHT_BRACKET"
        }

comparison_operators_list = [
    "TK_EQUAL",
    "TK_NOT_EQUAL",
    "TK_GREATER_THAN",
    "TK_LESS_THAN",
    "TK_GREATER_THAN_EQUAL",
    "TK_LESS_THAN_EQUAL"
]

